name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup project environment
      uses: ./.github/actions/setup-project # Using the composite action

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Type check with mypy
      run: |
        mypy keisei/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # Allow mypy failures for now during transition

    - name: Test with pytest and collect coverage
      run: |
        pytest tests/ -v --tb=short --cov=keisei --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4 # Updated to v4 (check latest version for codecov)
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella # Kept user's original name
        # token: ${{ secrets.CODECOV_TOKEN }} # Recommended for private repos
      # fail_ci_if_error: false # Default is false, can be explicit if desired

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - uses: actions/checkout@v4

    - name: Setup project environment
      uses: ./.github/actions/setup-project # Using the composite action

    - name: Run integration smoke test
      run: |
        pytest tests/test_integration_smoke.py -v --tb=short
      timeout-minutes: 10

  parallel-system-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup project environment
      uses: ./.github/actions/setup-project # Using the composite action

    - name: Run parallelism smoke test
      run: |
        pytest tests/test_parallel_smoke.py -v --tb=short
      timeout-minutes: 15

    - name: Upload test artifacts on failure
      uses: actions/upload-artifact@v4 # Updated to v4
      if: failure()
      with:
        name: parallel-test-logs
        path: |
          *.log
          logs/ # Ensure this logs/ directory exists at the root or adjust path

  performance-check:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup project environment
      uses: ./.github/actions/setup-project # Using the composite action

    - name: Run performance profiling
      run: |
        python scripts/profile_training.py --timesteps 500 --report
      timeout-minutes: 10

    - name: Upload profiling results
      uses: actions/upload-artifact@v4 # Updated to v4
      with:
        name: performance-profile
        path: |
          *.prof
          *_report.txt

  security-scan:
    runs-on: ubuntu-latest
    # Consider if this should 'need: test' or run independently
    # needs: test
    steps:
    - uses: actions/checkout@v4

    # Minimal setup for security tools, not the full project setup unless tools need it
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security scanner
      run: |
        bandit -r keisei/ -f json -o bandit-report.json || true # Don't fail CI yet
        bandit -r keisei/ || true  # Also run with default output for logs, also don't fail CI

    - name: Upload Bandit Report
      uses: actions/upload-artifact@v4 # Updated to v4
      if: always() # Upload report even if bandit step has '|| true'
      with:
        name: bandit-security-report
        path: bandit-report.json

    - name: Check for known security vulnerabilities with Safety
      run: |
        # Assuming requirements.txt contains the primary dependencies to check
        # If safety needs to check installed packages from -e ., ensure full setup or adjust
        safety check -r requirements.txt --json --output safety-report.json || true # Don't fail CI yet
        safety check -r requirements.txt || true # Also run with default output

    - name: Upload Safety Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: safety-security-report
        path: safety-report.json